{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\r\\n.float-button{\\r\\n    position: fixed;\\r\\n    bottom: 40px;\\r\\n    right: 40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZmxvYXQtYnV0dG9ue1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgYm90dG9tOiA0MHB4O1xyXG4gICAgcmlnaHQ6IDQwcHg7XHJcbn0iXX0= */\"","module.exports = \"\\n<mat-toolbar color=\\\"primary\\\">\\n    <span>Projeto Laravel + Angular</span>\\n</mat-toolbar>\\n\\n<mat-divider></mat-divider>\\n\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around stretch\\\" >\\n    <app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\"></app-post>\\n</div>\\n\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\n    <mat-icon> add </mat-icon>    \\n</button>\"","import { PostService } from './post.service';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { Post } from './post';\nimport { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'refangular';\n  \n  private posts: Post[];\n\nconstructor(\n  public dialog: MatDialog,\n  public postService: PostService) {}\n\n  ngOnInit(){\n    this.posts = this.postService.posts;\n  }\n\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent, {width: '600px'})\n    dialogRef.afterClosed().subscribe((result) => {\n      if(result){\n        this.postService.salvar(result.post, result.arquivo);\n      }\n    });\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBadgeModule } from '@angular/material/badge';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { POstComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    POstComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule\n  ],\n  providers: [],\n  entryComponents: [PostDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QtZGlhbG9nL3Bvc3QtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n    <mat-form-field fxFlex=\\\"50\\\">\\n      <input matInput placeholder=\\\"Seu nome\\\" [(ngModel)]=\\\"dados.post.nome\\\">\\n      <mat-hint>Digite seu nome</mat-hint>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"40\\\">\\n      <input matInput placeholder=\\\"Seu email\\\" [(ngModel)]=\\\"dados.post.email\\\">\\n      <mat-hint>Digite seu email</mat-hint>\\n    </mat-form-field>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n    <mat-form-field fxFlex=\\\"50\\\">\\n      <input matInput placeholder=\\\"Título da mensagem\\\" [(ngModel)]=\\\"dados.post.titulo\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"40\\\">\\n      <input matInput placeholder=\\\"Subtitulo da mensagem\\\" [(ngModel)]=\\\"dados.post.subtitulo\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Escreva sua mensagem\\\" [(ngModel)]=\\\"dados.post.mensagem\\\"></textarea>\\n  </mat-form-field>\\n</div>\\n\\n<input type=\\\"file\\\" style=\\\"display: none\\\" #fileInput (change)=\\\"changeFile($event)\\\">\\n\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileInput.click()\\\">\\n  <mat-icon>add_a_photo</mat-icon>\\n  Adicionar uma foto\\n</button>\\n<p *ngIf=\\\"nomearquivo!=''\\\">\\n  <strong>Arquivo: </strong>{{nomearquivo}}\\n  <mat-icon color=\\\"primary\\\">done</mat-icon>\\n</p>\\n\\n<br><br>\\n\\n<div style=\\\"text-align: right\\\">\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"salvar()\\\">Ok</button>\\n  <button mat-button color=\\\"warn\\\" (click)=\\\"cancelar()\\\">Cancelar</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  private nomearquivo: string = '';\n\n  private dados = {\n    post: new Post(\"\", \"\", \"\", \"\", \"\"),\n    arquivo: null\n  };\n\n  constructor(public dialogref : MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit() {\n  }\n\n  changeFile(event){\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar(){\n    this.dialogref.close(null);\n  }\n\n}\n","import { Post } from './post';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  public posts: Post[] = [];\n\n  constructor(private http: HttpClient) { \n    this.http.get(\"/api\").subscribe((postsServer: any[]) => {\n        for(let p of postsServer) {\n          this.posts.push(new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes));\n        }\n    });\n  }\n\n  salvar(post: Post, file: File){\n    //utilizando FormData por causa do arquivo\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post('/api', uploadData, {reportProgress: true, observe: 'events'}).subscribe((event: any) => {\n      if(event.type == HttpEventType.Response){\n          let p: any = event.body;\n          this.posts.push(new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes));\n      }\n      //evento de progresso de upload\n      if(event.type == HttpEventType.UploadProgress){\n        console.log(event);\n      }\n    });\n  }\n\n  like(id: number){\n    this.http.get('/api/like/' + id).subscribe((event: any) => {\n      //busca um objeto dentro do array que contenha o id selecionado\n      let p = this.posts.find((p) => p.id == id); \n      p.likes = event.likes;\n    });\n  }\n\n  delete(id: number){\n    this.http.delete('/api/' + id).subscribe((event) => {\n      let i = this.posts.findIndex((p) => p.id == id);\n      if(i >= 0){\n        this.posts.splice(i, 1);\n      }\n    });\n  }\n\n}\n","export class Post {\r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ) {}\r\n}","module.exports = \".card {\\r\\n    max-width: 300px;\\r\\n    margin: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgIG1hcmdpbjogMTBweDtcclxufSJdfQ== */\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar></div>\\n      <mat-card-title>{{post.titulo}}</mat-card-title>\\n      <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\\n    </mat-card-header>\\n    <img mat-card-image src=\\\"/storage/{{post.arquivo}}\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n    <mat-card-content>\\n      <p>\\n        {{post.mensagem}}\\n      </p>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"like()\\\">LIKE</button>\\n      <button mat-button color=\\\"accent\\\" (click)=\\\"delete()\\\">DELETE</button>\\n      <mat-icon color=\\\"warn\\\" *ngIf=\\\"post.likes>0\\\" [matBadge]=\\\"post.likes\\\" \\n        matBadgePosition=\\\"above after\\\" matBadgeColor=\\\"warn\\\" matBadgeOverlap=\\\"false\\\">favorite</mat-icon>\\n    </mat-card-actions>\\n  </mat-card>\"","import { PostService } from './../post.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class POstComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor(private postService: PostService) { }\n\n  ngOnInit() {\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n  delete(){\n    this.postService.delete(this.post.id);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}